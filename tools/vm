#! /usr/bin/python

import optparse
import signal
import sys
import time
import threading

import cpu
import cpu.assemble
import irq
import irq.timer
import irq.conio
import io
import io.conio
import mm
import util
import machine

from util import *

def main():
  parser = optparse.OptionParser()

  parser.add_option('-v', dest = 'verbosity', action = 'count', default = 0, help = 'Verbosity level')

  parser.add_option('-c', dest = 'cpus', action = 'store', default = 1, help = 'Number of CPUs')
  parser.add_option('-t', dest = 'cores', action = 'store', default = 1, help = 'Number of cores per CPU')

  parser.add_option('-b', dest = 'bin_in', action = 'append', default = None, help = 'Binary file to run')

  parser.add_option('-i', dest = 'file_in', default = None, help = 'Input file')
  parser.add_option('-o', dest = 'file_out', default = None, help = 'Output file')

  options, args = parser.parse_args()

  util.set_verbosity(options.verbosity)

  M = machine.Machine(cpus = int(options.cpus), cores = int(options.cores), binaries = options.bin_in)

  def sigint_handler(signal, frame):
    info('VM interrupted by user')

    M.halt()

  signal.signal(signal.SIGINT, sigint_handler)

  sys.stdout.flush()

  M.boot()

  while M.thread.is_alive():
    time.sleep(cpu.CPU_SLEEP_QUANTUM * 10)

if __name__ == '__main__':
  main()

