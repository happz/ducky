#! /usr/bin/env python

import os
from functools import partial
from six import print_

Import('ENV', 'DuckyCommand')

def create_define_file(source, target, env):
  cmd = DuckyCommand(env)
  cmd.command = env.subst('$VIRTUAL_ENV/bin/ducky-defs -i {source} -o {target}'.format(source = str(source[0]), target = str(target[0])))

  if 'COVERAGEDIR' in env:
    cmd.wrap_by_coverage(env)

  return cmd.run(env, 'DEFINE', target[0])

E = ENV.FullClone(
  BUILDERS = {
    'DuckyDefine': Builder(action = create_define_file)
  }
)

DEFINES = [E.DuckyDefine(os.path.splitext(str(source))[0], source = source) for source in Glob('*.asm.in')]
defines = E.Alias('defines', DEFINES)

Export('DEFINES')

E.OnClean(defines)
E.Help("""     ${BLUE}'scons defines'${CLR} to build assembly include files,\n""")
