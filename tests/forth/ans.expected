

CR CR SOURCE TYPE ( Preliminary test ) CR
SOURCE ( These lines test SOURCE, TYPE, CR and parenthetic comments ) TYPE CR
( The next line of output should be blank to test CR ) SOURCE TYPE CR CR

( Pass #1: testing 0 >IN +! ) 0 >IN +! SOURCE TYPE CR
( Pass #2: testing 1 >IN +! ) 1 >IN +! xSOURCE TYPE CR
( Pass #3: testing 1+ ) 1 1+ >IN +! xxSOURCE TYPE CR
( Pass #4: testing @ ! BASE ) 0 1+ 1+ BASE ! BASE @ >IN +! xxSOURCE TYPE CR
( Pass #5: testing decimal BASE ) BASE @ >IN +! xxxxxxxxxxSOURCE TYPE CR
( Pass #6: testing : ; ) : .SRC SOURCE TYPE CR ; 6 >IN +! xxxxxx.SRC
( Pass #7: testing number input ) 19 >IN +! xxxxxxxxxxxxxxxxxxx.SRC
( Pass #8: testing VARIABLE ) VARIABLE Y 2 Y ! Y @ >IN +! xx.SRC
( Pass #9: testing WORD COUNT ) 5 MSG abcdef) Y ! Y ! >IN +! xxxxx.SRC
( Pass #10: testing WORD COUNT ) MSG ab) >IN +! xxY ! .SRC
Pass #11: testing WORD COUNT .MSG
Pass #12: testing = returns all 1's for true
Pass #13: testing = returns 0 for false
Pass #14: testing -1 interpreted correctly
Pass #15: testing 2*
Pass #16: testing 2*
Pass #17: testing AND
Pass #18: testing AND
Pass #19: testing AND
Pass #20: testing ?F~ ?~~ Pass Error
Pass #21: testing ?~
Pass #22: testing EMIT
Pass #23: testing S"

Results: 

Pass messages #1 to #23 should be displayed above
and no error messages

0 tests failed out of 56 additional tests


--- End of Preliminary Tests --- 

TESTING CORE WORDS
TESTING BASIC ASSUMPTIONS
TESTING BOOLEANS: INVERT AND OR XOR
TESTING 2* 2/ LSHIFT RSHIFT
TESTING COMPARISONS: 0= = 0< < > U< MIN MAX
TESTING STACK OPS: 2DROP 2DUP 2OVER 2SWAP ?DUP DEPTH DROP DUP OVER ROT SWAP
TESTING >R R> R@
TESTING ADD/SUBTRACT: + - 1+ 1- ABS NEGATE
TESTING MULTIPLY: S>D * M* UM*
TESTING DIVIDE: FM/MOD SM/REM UM/MOD */ */MOD / /MOD MOD
TESTING HERE , @ ! CELL+ CELLS C, C@ C! CHARS 2@ 2! ALIGN ALIGNED +! ALLOT
TESTING CHAR [CHAR] [ ] BL S"
TESTING ' ['] FIND EXECUTE IMMEDIATE COUNT LITERAL POSTPONE STATE (*** DUCKY PATCH **)
TESTING IF ELSE THEN BEGIN WHILE REPEAT UNTIL RECURSE
TESTING DO LOOP +LOOP I J UNLOOP LEAVE EXIT
TESTING DEFINING WORDS: : ; CONSTANT VARIABLE CREATE DOES> >BODY
TESTING EVALUATE
TESTING SOURCE >IN WORD (*** DUCKY PATCH **)
TESTING <# # #S #> HOLD SIGN BASE >NUMBER HEX DECIMAL
TESTING FILL MOVE
TESTING OUTPUT: . ." CR EMIT SPACE SPACES TYPE U.
YOU SHOULD SEE THE STANDARD GRAPHIC CHARACTERS:
 !"#$%&'()*+,-./0123456789:;<=>?@
ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`
abcdefghijklmnopqrstuvwxyz{|}~
YOU SHOULD SEE 0-9 SEPARATED BY A SPACE:
0 1 2 3 4 5 6 7 8 9 
YOU SHOULD SEE 0-9 (WITH NO SPACES):
0123456789
YOU SHOULD SEE A-G SEPARATED BY A SPACE:
A B C D E F G 
YOU SHOULD SEE 0-5 SEPARATED BY TWO SPACES:
0  1  2  3  4  5  
YOU SHOULD SEE TWO SEPARATE LINES:
LINE 1
LINE 2
YOU SHOULD SEE THE NUMBER RANGES OF SIGNED AND UNSIGNED NUMBERS:
  SIGNED: -80000000 7FFFFFFF 
UNSIGNED: 0 FFFFFFFF 
TESTING INPUT: ACCEPT

PLEASE TYPE UP TO 80 CHARACTERS:

RECEIVED: ""
TESTING DICTIONARY SEARCH RULES

End of Core word set tests
TESTING DO +LOOP with run-time increment, negative increment, infinite loop
TESTING DO +LOOP with large and small increments (*** DUCKY PATCH ***)
TESTING DO +LOOP with maximum and minimum increments (*** DUCKY PATCH ***)
TESTING multiple RECURSEs in one colon definition
TESTING multiple ELSE's in an IF statement
TESTING manipulation of >IN in interpreter mode
TESTING IMMEDIATE with CONSTANT  VARIABLE and CREATE [ ... DOES> ] (*** DUCKY PATCH ***)
TESTING that IMMEDIATE doesn't toggle a flag
TESTING parsing behaviour of S" ." and (

You should see 2345: 2345
TESTING number prefixes # $ % and 'c' character input
TESTING definition names
TESTING FIND with a zero length string and a non-existent word
TESTING DOES> doesn't cause a problem with a CREATEd address

End of additional Core tests

Test utilities loaded
TESTING Core Extension words
TESTING TRUE FALSE
TESTING <> U>   (contributed by James Bowman)
TESTING 0<> 0>   (contributed by James Bowman)
TESTING NIP TUCK ROLL PICK   (contributed by James Bowman)
TESTING 2>R 2R@ 2R>   (contributed by James Bowman)
TESTING HEX   (contributed by James Bowman)
TESTING WITHIN   (contributed by James Bowman)
TESTING UNUSED  (contributed by James Bowman & Peter Knaggs)
TESTING AGAIN   (contributed by James Bowman)
TESTING MARKER   (contributed by James Bowman)
TESTING ?DO (*** DUCKY PATCH **)
TESTING BUFFER:
TESTING VALUE TO
TESTING CASE OF ENDOF ENDCASE
TESTING C"
TESTING SAVE-INPUT and RESTORE-INPUT with a string source
TESTING .(


Output from .(
You should see -9876: -9876 
and again: -9876


On the next 2 lines you should see First then Second messages:
First message via .( 
Second message via ."

TESTING .R and U.R - has to handle different cell sizes


Output from .R and U.R
You should see lines duplicated:
indented by 0 spaces
1984383623 
1984383623
-2088648480 
-2088648480
1984383623 
1984383623
2206318816 
2206318816

indented by 0 spaces
1984383623 
1984383623
-2088648480 
-2088648480
1984383623 
1984383623
2206318816 
2206318816

indented by 5 spaces
     1984383623 
     1984383623
     -2088648480 
     -2088648480
     1984383623 
     1984383623
     2206318816 
     2206318816

TESTING PAD ERASE
TESTING PARSE
TESTING HOLDS  (Forth 2012)
TESTING REFILL SOURCE-ID

End of Core Extension word tests
TESTING Block word set
TESTING Random Number Utilities
TESTING BLOCK ( read-only mode )
TESTING BUFFER ( read-only mode )
TESTING Read and Write access with UPDATE and FLUSH
TESTING SAVE-BUFFERS
TESTING BLK
TESTING LOAD and EVALUATE
TESTING LIST and SCR
Screen 93 not modified
00 Should show a (mostly) blank screen                             
01                                                                 
02                                                                 
03                                                                 
04                                                                 
05                                                                 
06                                                                 
07                                                                 
08                                                                 
09                                                                 
10                                                                 
11                                                                 
12                                                                 
13                                                                 
14                                                                 
15                                                                 
Screen 1 not modified
00 List of the First test block                                    
01                                                                 
02                                                                 
03                                                                 
04                                                                 
05                                                                 
06                                                                 
07                                                                 
08                                                                 
09                                                                 
10                                                                 
11                                                                 
12                                                                 
13                                                                 
14                                                                 
15                                                                 
Screen 100 not modified
00 List of the Last test block                                     
01                                                                 
02                                                                 
03                                                                 
04                                                                 
05                                                                 
06                                                                 
07                                                                 
08                                                                 
09                                                                 
10                                                                 
11                                                                 
12                                                                 
13                                                                 
14                                                                 
15                                                                 
Screen 14 not modified
00                                                                 
01                                                                 
02                                                                 
03                                                                 
04                                                                 
05                                                                 
06                                                                 
07                                                                 
08                                                                 
09                                                                 
10                                                                 
11                                                                 
12                                                                 
13                                                                 
14                                                                 
15                                                    End of Screen
Screen 31 not modified
00 Should show another (mostly) blank screen                       
01                                                                 
02                                                                 
03                                                                 
04                                                                 
05                                                                 
06                                                                 
07                                                                 
08                                                                 
09                                                                 
10                                                                 
11                                                                 
12                                                                 
13                                                                 
14                                                                 
15                                                                 
TESTING EMPTY-BUFFERS
TESTING >IN manipulation from a block source
TESTING \, SAVE-INPUT, RESTORE-INPUT and REFILL from a block source
Given Characters per Line: 64 
TESTING THRU

End of Block word tests

---------------------------
        Error Report
Word Set             Errors
---------------------------
Core                    0
Core extension          0
Block                   0
Double number           -
Exception               -
Facility                -
File-access             -
Locals                  -
Memory-allocation       -
Programming-tools       -
Search-order            -
String                  -
---------------------------
Total                   0
---------------------------


Forth tests completed 

