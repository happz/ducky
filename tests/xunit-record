#!/usr/bin/env python

import optparse
import sys
import time
import xunitgen

from bs4 import BeautifulSoup

def main():
  parser = optparse.OptionParser()

  parser.add_option('-f', '--file',
                    dest = 'file',
                    default = None,
                    help = 'xunit file')

  opt_group = optparse.OptionGroup(parser, 'Actions')
  parser.add_option_group(opt_group)
  opt_group.add_option('-i', '--init',
                       dest = 'action',
                       action = 'store_const',
                       const = 'init',
                       help = 'init xunit file')
  opt_group.add_option('-a', '--add',
                       dest = 'action',
                       action = 'store_const',
                       const = 'add',
                       help = 'Add test case')

  opt_group = optparse.OptionGroup(parser, 'Init options')
  parser.add_option_group(opt_group)
  opt_group.add_option('--testsuite', dest = 'testsuites', action = 'append', default = [])

  opt_group = optparse.OptionGroup(parser, 'Add testcase options')
  parser.add_option_group(opt_group)
  opt_group.add_option('--ts', dest = 'testsuite', default = None)
  opt_group.add_option('--name', dest = 'name', default = None)
  opt_group.add_option('--classname', dest = 'classname', default = None)
  opt_group.add_option('--time', dest = 'time', default = None)
  opt_group.add_option('--result', dest = 'result', type = 'choice', choices = ['pass', 'fail'], default = 'pass')
  opt_group.add_option('--message', dest = 'message', default = None)

  options, args = parser.parse_args()

  soup = None

  if options.action == 'init':
    soup = BeautifulSoup('', 'xml')

    for ts_name in options.testsuites:
      ts_tag = soup.new_tag('testsuite', tests = '0', errors = '0', failures = '0', skip = '0')
      ts_tag['name'] = ts_name

      soup.append(ts_tag)

  elif options.action == 'add':
    with open(options.file, 'r') as f:
      soup = BeautifulSoup(f, 'xml')

    tc_tag = soup.new_tag('testcase')
    if options.name:
      tc_tag['name'] = options.name
    if options.classname:
      tc_tag['classname'] = options.classname
    if options.time:
      tc_tag['time'] = options.time

    if options.result == 'fail':
      tc_fail_tag = soup.new_tag('failure')
      if options.message:
        tc_fail_tag['message'] = options.message

      tc_tag.append(tc_fail_tag)

    ts_tag = soup.find('testsuite', attrs = {'name': options.testsuite})
    ts_tag.append(tc_tag)

    ts_tag['tests'] = str(int(ts_tag['tests']) + 1)
    if options.result == 'fail':
      ts_tag['failures'] = str(int(ts_tag['failures']) + 1)

  with open(options.file, 'w') as f:
    f.write(soup.prettify())

if __name__ == '__main__':
  main()

